}
colnames(grd) = "Grade"
score = cbind(score, total)
score = cbind(score, grd)
score
write.csv(score,file="Result.csv")
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else if(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else(){
grd[i] = "E"
}
}
for(i in 1:nrow(total)){
if(total[i] > 90){
grd[i] = "A"
}else if(total[i] > 85){
grd[i] = "A-"
}else if(total[i] > 80){
grd[i] = "B+"
}else if(total[i] > 75){
grd[i] = "B"
}else if(total[i] > 70){
grd[i] = "B-"
}else if(total[i] > 65){
grd[i] = "C"
}else if(total[i] > 50){
grd[i] = "D"
}else{
grd[i] = "E"
}
}
colnames(grd) = "Grade"
score = cbind(score, total)
score = cbind(score, grd)
score
write.csv(score,file="R.csv", row.names = FALSE)
write.csv(score,file="Result.csv")
vehicle<-c("a","b","c","d","e")
fuel <- c(10,11,20,25,30)
barplot(fuel, names.arg = vehicle)
barplot(fuel, names.arg = vehicle, main="Fuel Consumption of Vehicle", col = rainbow(2))
barplot(fuel, names.arg = vehicle, main="Fuel Consumption of Vehicle", col = rainbow(length(fuel)))
percentage = round(fuel*100/sum(fuel), 2)
pie(fuel, labels=fuel)
percentage = round(fuel*100/sum(fuel), 2)
pie(percentage, labels=percentage)
pie(percentage, labels=paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
pie(percentage, labels=paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel)))
pie(percentage, labels=paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
legend("topright", vehicle. fill = rainbow(5))
pie(percentage, labels=paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel))
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel),)
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel),)
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel),)
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(length(fuel),)
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(5))
legend("topright", vehicle. fill = rainbow(5))
legend("topright", vehicle, fill = rainbow(5))
legend("topright", vehicle, fill = rainbow(5))
hist(fuel)
hist(fuel, xlab = "Fuel Consumption", ylab = "Freq")
boxplot(fuel)
boxplot(fuel, ylab = "freq", col = "pink")
plot(fuel, type="o", col="red", xlab = "vehicle", ylab = "freq")
date = c("25-10,2004", "26-10-2004", "27-10-2004", "28-10-2004", "29-10-2004")
axis(1, at=1:5, date)
plot(fuel, type="o", col="red", xlab = "vehicle", ylab = "freq")
plot(fuel, type="o", col="red", xlab = "vehicle", ylab = "freq", xaxt = "n")
axis(1, at=1:5, date)
pie(percentage, labels = paste(percentage, " %"), main="Fuel Consumption of Vehicle", col = rainbow(5))
legend("topright", vehicle, fill = rainbow(5))
sales = read.csv("supermarket_sales.csv", fileEncoding = "UTF-8-BOM")
sales = subset(sales, select = "Invoice.ID", "Branch", "City", "Gender", "Unit.price", "Quantity")
sales = sales[,c("Invoice.ID", "Branch", "City", "Gender", "Unit.price", "Quantity")]
# 1. Import CSV dan kolomnya cuma Invoice ID, Branch, City, Gender, Unit Price, dan Quantity
sales = read.csv("supermarket_sales.csv", fileEncoding = "UTF-8-BOM")
# 1. Import CSV dan kolomnya cuma Invoice ID, Branch, City, Gender, Unit Price, dan Quantity
sales = read.csv("supermarket_sales.csv", fileEncoding = "UTF-8-BOM")
sales = subset(sales, select = "Invoice.ID", "Branch", "City", "Gender", "Unit.price", "Quantity")
sales = sales[,c("Invoice.ID", "Branch", "City", "Gender", "Unit.price", "Quantity")]
sales = subset(sales, select = c("Invoice.ID", "Branch", "City", "Gender", "Unit.price", "Quantity"))
sales = sales[,c("Invoice.ID", "Branch", "City", "Gender", "Unit.price", "Quantity")]
# 2. Ambil data yang Branchnya cuma Naypyitaw dan Yangon doang
sales = sales[sales$City == "Naypyitaw" | sales$City == "Yangon"]
# 2. Ambil data yang Branchnya cuma Naypyitaw dan Yangon doang
sales = sales[sales$City == "Naypyitaw" | sales$City == "Yangon"]
# 2. Ambil data yang Branchnya cuma Naypyitaw dan Yangon doang
sales = sales[sales$City == "Naypyitaw" | sales$City == "Yangon"]
sales = sales[sales$City == "Naypyitaw" | sales$City == "Yangon"]
View(sales)
# 2. Ambil data yang Branchnya cuma Naypyitaw dan Yangon doang
sales = sales[sales$City == "Naypyitaw" | sales$City == "Yangon"]
# 1. Import CSV dan kolomnya cuma Invoice ID, Branch, City, Gender, Unit Price, dan Quantity
sales = read.csv("supermarket_sales.csv", fileEncoding = "UTF-8-BOM")
sales = subset(sales, select = c("Invoice.ID", "Branch", "City", "Gender", "Unit.price", "Quantity"))
# 2. Ambil data yang Branchnya cuma Naypyitaw dan Yangon doang
sales = sales[sales$City == "Naypyitaw" | sales$City == "Yangon"]
# 1. Import CSV dan kolomnya cuma Invoice ID, Branch, City, Gender, Unit Price, dan Quantity
sales = read.csv("supermarket_sales.csv", fileEncoding = "UTF-8-BOM")
sales = subset(sales, select = c("Invoice.ID", "Branch", "City", "Gender", "Unit.price", "Quantity"))
sales = sales[,c("Invoice.ID", "Branch", "City", "Gender", "Unit.price", "Quantity")]
# 2. Ambil data yang Branchnya cuma Naypyitaw dan Yangon doang
sales = sales[sales$City == "Naypyitaw" | sales$City == "Yangon"]
# 3. Buat kolom total pembelian
# 4. Update gender dimana Male diubah jadi M, dan Female jadi F
# 5. Sort data dari total Harga terbesar ke terkecil
# 6. Ambil 10 data teratas
# 7. Buat plot dari 10 data teratas
# 2. Ambil data yang Branchnya cuma Naypyitaw dan Yangon doang
sales = sales[sales$City == "Naypyitaw" | sales$City == "Yangon",]
# 3. Buat kolom total pembelian
sales$Total = sales$Unit.price*sales$Quantity
# 4. Update gender dimana Male diubah jadi M, dan Female jadi F
sales$Gender[sales$Gender == "Male"] = "M"
sakes$Gender[sales$Gender == "Female"] = "F"
sales$Gender[sales$Gender == "Female"] = "F"
sales
# 5. Sort data dari total Harga terbesar ke terkecil
sales = sales[order(sales$Date, decreasing = TRUE),]
# 5. Sort data dari total Harga terbesar ke terkecil
sales = sales[order(sales$Total, decreasing = TRUE),]
sales
# 6. Ambil 10 data teratas
sales[1:10,]
head(sales, 10)
# 7. Buat plot dari 10 data teratas
barplot(head(sales$Total, 10), names.arg = head(sales$Invoice.ID, 10), col = rainbow(10))
# Read
# Liat csv, NA nya dalam bentuk apa
score = read.csv("Score.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
# Hapus yang NA
score = na.omit(score)
# Ambil yang datanya cuma 0-100
score = score[score$Score <= 100 & score$Score >= 0,]
# Hapus duplicate
duplicated(score)
score = score[!duplicated(score),]
duplicated(score)
# Merged
merged = merge(score, course, by = "Course.Code")
merged
#Top 3 Student Average Score for all
# course
#total student per course for student >=65
#Total Income For Each Course, 1 Credit = 500000
# Merged
merged = merge(score, course, by = "Course.Code")
# Read
# Liat csv, NA nya dalam bentuk apa
score = read.csv("Score.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
# Read
# Liat csv, NA nya dalam bentuk apa
score = read.csv("Score.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
# Hapus yang NA
score = na.omit(score)
# Ambil yang datanya cuma 0-100
score = score[score$Score <= 100 & score$Score >= 0,]
# Hapus duplicate
duplicated(score)
score = score[!duplicated(score),]
duplicated(score)
# Merged
merged = merge(score, course, by = "Course.Code")
merged
#Top 3 Student Average Score for all
# course
#total student per course for student >=65
#Total Income For Each Course, 1 Credit = 500000
# Read
# Liat csv, NA nya dalam bentuk apa
score = read.csv("Score.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
# Hapus yang NA
score = na.omit(score)
# Ambil yang datanya cuma 0-100
score = score[score$Score <= 100 & score$Score >= 0,]
duplicated(score)
score = score[!duplicated(score),]
duplicated(score)
merged
# Merged
merged = merge(score, course, by = "Course.Code")
course = read.csv("Course.csv", fileEncoding = UTM-8-BOM)
# Read
# Liat csv, NA nya dalam bentuk apa
score = read.csv("Score.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
course = read.csv("Course.csv", fileEncoding = UTM-8-BOM)
# Hapus yang NA
score = na.omit(score)
# Ambil yang datanya cuma 0-100
score = score[score$Score <= 100 & score$Score >= 0,]
# Hapus duplicate
duplicated(score)
score = score[!duplicated(score),]
duplicated(score)
# Merged
merged = merge(score, Course, by = "Course.Code")
#Top 3 Student Average Score for all
# course
#total student per course for student >=65
#Total Income For Each Course, 1 Credit = 500000
# Read
# Liat csv, NA nya dalam bentuk apa
score = read.csv("Score.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
course = read.csv("Course.csv", fileEncoding = UTM-8-BOM)
# Hapus yang NA
score = na.omit(score)
# Ambil yang datanya cuma 0-100
score = score[score$Score <= 100 & score$Score >= 0,]
# Hapus duplicate
duplicated(score)
score = score[!duplicated(score),]
duplicated(score)
# Merged
merged = merge(score, Course, by = "Course.Code")
#Top 3 Student Average Score for all
# course
#total student per course for student >=65
#Total Income For Each Course, 1 Credit = 500000
# Read
# Liat csv, NA nya dalam bentuk apa
score = read.csv("Score.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
course = read.csv("Course.csv", fileEncoding = UTM-8-BOM)
# Hapus yang NA
score = na.omit(score)
# Ambil yang datanya cuma 0-100
score = score[score$Score <= 100 & score$Score >= 0,]
# Hapus duplicate
duplicated(score)
score = score[!duplicated(score),]
duplicated(score)
# Merged
merged = merge(score, Course, by = "Course.Code")
#Top 3 Student Average Score for all
# course
#total student per course for student >=65
#Total Income For Each Course, 1 Credit = 500000
# Merged
merged = merge(score, course, by = "Course.Code")
# Read
# Liat csv, NA nya dalam bentuk apa
score = read.csv("Score.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
course = read.csv("Course.csv", fileEncoding = UTM-8-BOM)
# Hapus yang NA
score = na.omit(score)
# Ambil yang datanya cuma 0-100
score = score[score$Score <= 100 & score$Score >= 0,]
# Hapus duplicate
duplicated(score)
score = score[!duplicated(score),]
duplicated(score)
# Merged
merged = merge(score, course, by = "Course.Code")
#Top 3 Student Average Score for all
# course
#total student per course for student >=65
#Total Income For Each Course, 1 Credit = 500000
course = read.csv("Course.csv", fileEncoding = "UTF-8-BOM")
# Merged
merged = merge(score, course, by = "Course.Code")
merged
#Top 3 Student Average Score for all
average = aggregate(merged$Scre, by = list(merged$name), FUN = length)
#Top 3 Student Average Score for all
average = aggregate(merged$Scre, by = list(merged$name), FUN = length)
#Top 3 Student Average Score for all
average = aggregate(merged$Score, by = list(merged$name), FUN = length)
#Top 3 Student Average Score for all
average = aggregate(merged$Score, by = list(merged$Name), FUN = mean)
average = average[order(ave$x, decreasing = TRUE), ]
average = average[order(average$x, decreasing = TRUE), ]
average
top = head(average, 3)
top
#total student per course for student >=65
up65 = score[score$Score >= 65, ]
up65
count = aggregate(up65$Name, by = list(up65$Course.Code), FUN = length)
colnames(count) = c("Course.Code", "Score")
finl = merge(count, course, "Course.Code")
finl
#Total Income For Each Course, 1 Credit = 500000
finl$Income = finl$Score*finl$Credit*500000
finl
