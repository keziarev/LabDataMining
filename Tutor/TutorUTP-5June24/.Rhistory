result = read.csv("Result.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
result = read.csv("Result.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
result = read.csv("Result.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
result = read.csv("Result.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
result = read.csv("Result.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
result = read.csv("Result.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
result = read.csv("Result.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
result = na.omit(result)
# 1
question2 = aggregate(result$Participant.Number, by = list(result$Question.2), FUN = length)
question2 = question2$x
question2
percentage = round(question2$*100/sum(question2), 1)
percentage = round(question2$x*100/sum(question2), 1)
percentage = round(question2$x*100/sum(question2), 1)
percentage = round(question2$x*100/sum(question2), 1)
percentage = round(question2$x*100/sum(question2$x), 1)
percentage = round(question2$x*100/sum(question2$x), 1)
result = read.csv("Result.csv", na.strings = "", fileEncoding = "UTF-8-BOM")
result = na.omit(result)
# 1
question2 = aggregate(result$Participant.Number, by = list(result$Question.2), FUN = length)
question2 = question2$x
question2
percentage = round(question2$x*100/sum(question2$x), 1)
merged = merge(result, participant)
# 1
question2 = aggregate(result$Participant.Number, by = list(merged$Question.2), FUN = length)
merged = merge(result, participant)
merged = merge(result, participant)
merged = merge(result, participant)
participant = read.csv("Participant.csv", fileEncoding = "UT-8-BOM")
participant = read.csv("Participant.csv", fileEncoding = "UTF-8-BOM")
merged = merge(result, participant)
# 1
question2 = aggregate(result$Participant.Number, by = list(merged$Question.2), FUN = length)
question2 = question2$x
question2
percentage = round(question2$x*100/sum(question2$x), 1)
# 1
question2 = aggregate(merged$Participant.Number, by = list(merged$Question.2), FUN = length)
# 1
question2 = aggregate(merged$Participant.Number, by = list(merged$Question.2), FUN = length)
question2 = question2$x
question2
percentage = round(question2$x*100/sum(question2$x), 1)
question2
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
question2x
result=read.csv("Result.csv",na.strings = "",fileEncoding = "UTF-8-BOM")
result=na.omit(result)
participant=read.csv("Participant.csv",fileEncoding = "UTF-8-BOM")
merged=merge(result,participant)
#1
question2=aggregate(merged$Participant.Number,by=list(merged$Question.2),FUN=length)
question2x
percentage=round(question2$x*100/sum(question2$x),1)
percentage
pie(percentage,labels = percentage,col =rainbow(5),main="Result of Question 2 \nAKUAUAUA")
legend("topright",c("Strongly Disagree","Disagree","Neutral","Agree","Strongly Agree"),fill=rainbow((5)))
result = read.csv("Result.csv",na.strings = "",fileEncoding = "UTF-8-BOM")
result = na.omit(result)
participant = read.csv("Participant.csv",fileEncoding = "UTF-8-BOM")
merged = merge(result,participant, by = "Participant.Number")
#1
question2 = aggregate(merged$Participant.Number,by = list(merged$Question.2),FUN = length)
question2x
percentage = round(question2$x*100/sum(question2$x),1)
percentage
pie(percentage,labels = percentage,col = rainbow(5),main = "Result of Question 2 \nAKUAUAUA")
legend("topright",c("Strongly Disagree","Disagree","Neutral","Agree","Strongly Agree"),fill = rainbow((5)))
# 2
question6 = merged[merged$Gender == "Female", ]
question6
question6 = aggregate(question6$Participant.Number, by = list(question6$Question.6), FUN = length)
question6
question6$percentage = round(question6$x*100/sum(question6$x), 1)
question6
pie(question6$percentage, labels = question6$percentage, col = c("red", "cyan"))
legend("topright", c("FALSE", "TRUE"), fill = c("red", "cyan"))
pie(question6$percentage, labels = question6$percentage, col = c("red", "cyan"))
legend("topright", c("FALSE", "TRUE"), fill = c("red", "cyan"))
pie(question6$percentage, labels = question6$percentage, col = c("red", "cyan"))
pie(question6$percentage, labels = question6$percentage, col = c("red", "cyan"))
legend("topright", c("FALSE", "TRUE"), fill = c("red", "cyan"))
pie(question6$percentage, labels = question6$percentage, col = c("red", "cyan"))
legend("topright", c("FALSE", "TRUE"), fill = c("red", "cyan"))
q1male = merged[merged$Gender == "Male",]
q1female = merged[merged$Gender == "Female",]
q1male = aggregate(q1male$Participant.Number, by = list(q1male$Question.1), FUN = length)
q1male
q1female = aggregate(q1female$Participant.Number, by = list(q1female$Question.1), FUN = length)
q1female
q1male = t(q1male)
q1female = t(q1female)
q1male
q1female
q1male = q1male$x
q1male = q1male$x
q1female = q1male$x
q1male = q1male$x
q1female = q1female$x
q1male = q1male$x
q1male = q1male$x
q1male = q1male$x
q1male = q1male$x
# 3
q1male = merged[merged$Gender == "Male",]
q1female = merged[merged$Gender == "Female",]
q1male = aggregate(q1male$Participant.Number, by = list(q1male$Question.1), FUN = length)
q1female = aggregate(q1female$Participant.Number, by = list(q1female$Question.1), FUN = length)
q1male = q1male$x
q1male
q1female = q1female$x
q1female
q1male = t(q1male)
q1male
q1female = t(q1female)
q1female
q1 = rbind(q1female, q1male)
colnames(q1) = c("Strongly Disagree", "Disagree", "Neutral", "Agree", "Strongly Agree")
row.names(q1) = c("Female", "Male")
q1
barplot(q1, col = c("red", "orange"))
legend("topleft", c("Male", "Female"), fill = c("red", "orange"))
barplot(q1, col = c("red", "orange"))
legend("topleft", c("Male", "Female"), fill = c("red", "orange"))
barplot(q1, beside = FALSE, col = c("red", "orange"))
barplot(q1, beside = FALSE, col = c("red", "orange"))
legend("topleft", c("Male", "Female"), fill = c("red", "orange"))
barplot(q1, beside = TRUE, col = c("red", "orange"))
barplot(q1, beside = TRUE, col = c("red", "orange"))
barplot(q1, beside = FALSE, col = c("red", "orange"))
# 4
q1male = merged[merged$Gender == "Male",]
q1female = merged[merged$Gender == "Female",]
boxplot(q1male$Question.1)
boxplot(q1female$Question.1)
boxplot(merged$Question.1~merged$Gender, col = c("red", "orange"), xlab = "Gender", ylab = "Question 1 Answer")
# 5
hist(merged$Question.4, breaks = 5)
# 5
hist(merged$Question.4, breaks = 5, col = "red", "orange", "yellow", "green")
# 5
hist(merged$Question.4, breaks = 5, col = "red", "orange", "yellow", "green")
# 5
hist(merged$Question.4, breaks = 5, col = c("red", "orange", "yellow", "green"), xlab = "Question 4 Answer", ylab = "Frequency")
# 5
hist(merged$Question.4, breaks = 5, col = c("red", "orange", "yellow", "green"), xlab = "Question 4 Answer", ylab = "Frequency")
q1 = aggregate(merged$Participant.Number, by = list(merged$Question.1), FUN = length)
q2 = aggregate(merged$Participant.Number, by = list(merged$Question.2), FUN = length)
q3 = aggregate(merged$Participant.Number, by = list(merged$Question.3), FUN = length)
q4 = aggregate(merged$Participant.Number, by = list(merged$Question.4), FUN = length)
q5 = aggregate(merged$Participant.Number, by = list(merged$Question.5), FUN = length)
q1 = cbind(q1$x, q2$x, q3$x, q4$x, q5$x)
q1
colnames(q1) = c("Question 1", "Question 2", "Question 3", "Question 3", "Question 4", "Question 5")
q1 = aggregate(merged$Participant.Number, by = list(merged$Question.1), FUN = length)
q2 = aggregate(merged$Participant.Number, by = list(merged$Question.2), FUN = length)
q3 = aggregate(merged$Participant.Number, by = list(merged$Question.3), FUN = length)
q4 = aggregate(merged$Participant.Number, by = list(merged$Question.4), FUN = length)
q5 = aggregate(merged$Participant.Number, by = list(merged$Question.5), FUN = length)
q1 = cbind(q1$x, q2$x, q3$x, q4$x, q5$x)
q1
colnames(q1) = c("Question 1", "Question 2", "Question 3", "Question 3", "Question 4", "Question 5")
colnames(q1) = c("Question 1", "Question 2", "Question 3", "Question 3", "Question 4", "Question 5",)
colnames(q1) = c("Question 1", "Question 2", "Question 3", "Question 3", "Question 4", "Question 5")
colnames(q1) = c("Question 1", "Question 2", "Question 3", "Question 3", "Question 4", "Question 5")
colnames(q1) = c("Question 1", "Question 2", "Question 3", "Question 3", "Question 4", "Question 5")
colnames(q1) = c("Question 1", "Question 2", "Question 3", "Question 3", "Question 4", "Question 5")
colnames(q1) = c("Question 1", "Question 2", "Question 3", "Question 3", "Question 4", "Question 5")
legend("topright", c("Answer 1, Answer 2", "Answer 3", "Answer 4", "Answer 5", rainbow(5)))
colnames(q1) = c("Question 1", "Question 2", "Question 3", "Question 4", "Question 5")
row.names(q1) = c("Answer 1", "Answer 2", "Answer 3", "Answer 4", "Answer 5")
barplot(q1, col = rainbow(5), ylim = c(0, 100))
barplot(q1, col = rainbow(5), ylim = c(0, 100))
legend("topright", c("Answer 1, Answer 2", "Answer 3", "Answer 4", "Answer 5", fill = rainbow(5)))
legend("topright", c("Answer 1, Answer 2", "Answer 3", "Answer 4", "Answer 5"), fill = rainbow(5)))
barplot(q1, col = rainbow(5), ylim = c(0, 100))
legend("topright", c("Answer 1, Answer 2", "Answer 3", "Answer 4", "Answer 5"), fill = rainbow(5)))
barplot(q1, col = rainbow(5), ylim = c(0, 100))
legend("topright", c("Answer 1, Answer 2", "Answer 3", "Answer 4", "Answer 5"), fill = rainbow(5))
# 7
day = aggregate(merged$Participant.Number, by = list(merged$Date), FUN = length)
day = rbind(day, c("7/15/2018", 0))
day = day[order(day$Group.1, decreasing = FALSE), ]
day
plot(day$x, type = "p", xlab = "Survey Date", ylab = "Number of Participant")
plot(day$x, type = "p", xlab = "Survey Date", ylab = "Number of Participant", xaxt = "n")
axis(1, at=1:7, c("2018-07-14", "2018-07-15", "2018-07-16", "2018-07-17", "2018-07-18", "2018-07-19". "2018-07-20"))
plot(day$x, type = "p", xlab = "Survey Date", ylab = "Number of Participant", xaxt = "n")
axis(1, at=1:7, c("2018-07-14", "2018-07-15", "2018-07-16", "2018-07-17", "2018-07-18", "2018-07-19", "2018-07-20"))
plot(day$x, type = "p", xlab = "Survey Date", ylab = "Number of Participant", xaxt = "n")
axis(1, at=1:7, c("2018-07-14", "2018-07-15", "2018-07-16", "2018-07-17", "2018-07-18", "2018-07-19", "2018-07-20"))
date = as.Date(day$Group.1, "%m%d%Y")
plot(day$x, type = "p", xlab = "Survey Date", ylab = "Number of Participant", xaxt = "n")
axis(1, at=1:7, c("2018-07-14", "2018-07-15", "2018-07-16", "2018-07-17", "2018-07-18", "2018-07-19", "2018-07-20"))
axis(1, at = 1:7, date)
axis(1, at = 1:7, date)
plot(day$x, type = "p", xlab = "Survey Date", ylab = "Number of Participant", xaxt = "n")
date = as.Date(day$Group.1, "%m%d%Y")
date
axis(1, at = 1:7, date)
axis(1, at = 1:7, date)
plo
date = as.Date(day$Group.1, "%m%d%Y")
date
date
axis(1, at = 1:7, date)
plot(day$x, type = "p", xlab = "Survey Date", ylab = "Number of Participant", xaxt = "n")
day
date = as.Date(day$Group.1, "%m/%d/%Y")
date
plot(day$x, type = "p", xlab = "Survey Date", ylab = "Number of Participant", xaxt = "n")
axis(1, at = 1:7, date)
plot(day$x, type = "o", xlab = "Survey Date", ylab = "Number of Participants", xaxt = "n")
axis(1, at = 1:7, date)
png("result.png")
plot(day$x, type = "o", xlab = "Survey Date", ylab = "Number of Participants", xaxt = "n")
axis(1, at = 1:7, date)
dev.off()
png("result.png", width = 1200, height = 800)
plot(day$x, type = "o", xlab = "Survey Date", ylab = "Number of Participants", xaxt = "n")
axis(1, at = 1:7, date)
dev.off()
rate = read.csv("Exchange Range.csv", fileEncoding = "UTF-8-BOM")
rate = read.csv("Exchange Range.csv", fileEncoding = "UTF-8-BOM")
fileEncoding
rate = read.csv("Exchange Rate.csv", fileEncoding = "UTF-8-BOM")
rate
btc = rate[rate$Cryptocurrency == "BTC", ]
eth = rate[rate$Cryptocurrency == "ETH", ]
xrp = rate[rate$Cryptocurrency == "XRP", ]
eth16
# 3
eth16 = eth[eth$Date == "16-Aug-18",]
eth16
open = head(eth16, 1)
close = tail(eth16, 1)
open
close
sprintf("Etherium 16 August Open Price: Rp. %s", open$Price)
sprintf("Etherium 16 August Open Price: Rp. %s", close$Price)
# 4
btc15 = btc[btc$Date == "15-Aug-18", ]
btc15
btc15[order(btc15$Price), ]
btc15
btc15[order(btc15$Price), ]
btc15[order(btc15$Price), ]
btc15
low = head(btc15, 1)
spritnf("Bitcoin 15 August High Price: Rp. %s", high$Price)
btc15[order(btc15$Price), ]
btc15
low = head(btc15, 1)
high = tail(btc15, 1)
spritnf("Bitcoin 15 August High Price: Rp. %s", high$Price)
sprintf("Bitcoin 15 August High Price: Rp. %s", high$Price)
sprintf("Bitcoin 15 August Low Price: Rp. %s", low$Price)
xrp18 = xrp[xrp$Date == "18-Aug-18", ]
xrp18
summary(xrp18)
xrp18$Harga = as.double(xrp$Price)*1000
summary(xrp18)
xrp18$Harga = as.double(xrp$Price)*1000
xrp18$Harga = as.double(xrp$Price)*1000
xrp18$Harga = as.double(xrp18$Price)*1000
xrp18
mean(xrp18$Harga)
sprintf("Ripple 18 August Average Price: Rp. %.3f", mean(xrp18$Harga))
average = mean(xrp18$Harga)
average = formatC(average, format = "f", big.mark = ".", decimal.mark = ".", digits = 3)
average = formatC(average, format = "f", big.mark = ".", decimal.mark = ",", digits = 3)
btc = btc[order(btc$Date, btc$Time, decreasing = TRUE), ]
eth = eth[order(eth$Date, eth$Time, decreasing = TRUE), ]
xrp = xrp[order(xrp$Date, xrp$Time, decreasing = TRUE), ]
# 3
eth16 = eth[eth$Date == "16-Aug-18",]
eth16
btc
open = head(eth16, 1)
close = tail(eth16, 1)
open
close
sprintf("Etherium 16 August Open Price: Rp. %s", open$Price)
sprintf("Etherium 16 August Open Price: Rp. %s", close$Price)
btc15
btc15 = btc[btc$Date == "15-Aug-18", ]
btc15
btc15[order(btc15$Price), ]
btc15
low = head(btc15, 1)
high = tail(btc15, 1)
sprintf("Bitcoin 15 August High Price: Rp. %s", high$Price)
sprintf("Bitcoin 15 August Low Price: Rp. %s", low$Price)
low = min(btc15$Price)
high = max(btc15$Price)
sprintf("Bitcoin 15 August High Price: Rp. %s", high)
sprintf("Bitcoin 15 August Low Price: Rp. %s", low)
low = tail(btc15, 1)
high = head(btc15, 1)
sprintf("Bitcoin 15 August High Price: Rp. %s", high$Price)
sprintf("Bitcoin 15 August Low Price: Rp. %s", low$Price)
low = min(btc15$Price)
high = max(btc15$Price)
sprintf("Bitcoin 15 August High Price: Rp. %s", high)
sprintf("Bitcoin 15 August Low Price: Rp. %s", low)
sprintf("Ripple 18 August Average Price: Rp. %.3f", average)
sprintf("Ripple 18 August Average Price: Rp. %s", average)
average
md = median(xrp18$Harga)
median = median(xrp18$Harga)
median = formatC(median, format = "f", big.mark = ".", decimal.mark = ",", digits = 1)
median
sd
sd = sd(xrp18$Harga)
sd = formatC(sd, format = "f", big.mark = ".", decimal.mark = ",", digits = 5)
sd
sprintf("Ripple 18 August Average Price: Rp. %s", average)
sprintf("Ripple 18 August Average Price: Rp. %s", median)
sprintf("Ripple 18 August Average Price: Rp. %s", sd)
